{"version":3,"sources":["types/Types.ts","components/Button/Button.tsx","components/SortButtons/SortButtons.tsx","components/DataList/DataList.tsx","App.tsx","index.tsx"],"names":["SortBy","Button","classStr","click","text","type","className","onClick","SortButtons","sortedBy","reverse","reset","showReset","currentSorted","isRevers","cn","Alphabet","Length","DataList","data","map","item","goodsFromServer","App","useState","Default","setSortedBy","isReversed","setIsReversed","visibleGoods","goods","sort","a","b","localeCompare","length","getSortedGoods","value","ReactDOM","render","document","getElementById"],"mappings":"6KAAYA,E,8CAAAA,K,WAAAA,E,oBAAAA,E,iBAAAA,M,gCCQCC,EAA0B,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,MAAOC,EAApB,EAAoBA,KAApB,OACrC,wBACEC,KAAK,SACLC,UAAS,iBAAYJ,GACrBK,QAASJ,EAHX,SAKGC,KCAQI,EAA+B,SAAC,GAOtC,IANLC,EAMI,EANJA,SACAC,EAKI,EALJA,QACAC,EAII,EAJJA,MACAC,EAGI,EAHJA,UACAC,EAEI,EAFJA,cACAC,EACI,EADJA,SAEA,OACE,sBAAKR,UAAU,UAAf,UACE,cAAC,EAAD,CACEJ,SAAUa,IAAG,UACX,CAAE,WAAYF,IAAkBb,EAAOgB,WACzCb,MAAO,kBAAMM,EAAST,EAAOgB,WAC7BZ,KAAK,wBAGP,cAAC,EAAD,CACEF,SAAUa,IAAG,aACX,CAAE,WAAYF,IAAkBb,EAAOiB,SACzCd,MAAO,kBAAMM,EAAST,EAAOiB,SAC7Bb,KAAK,mBAGP,cAAC,EAAD,CACEF,SAAUa,IAAG,aAAc,CAAE,YAAaD,IAC1CX,MAAOO,EACPN,KAAK,YAGNQ,GACC,cAAC,EAAD,CACEV,SAAS,qBACTC,MAAOQ,EACPP,KAAK,cC1CFc,EAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACvC,6BACGA,EAAKC,KAAI,SAAAC,GAAI,OACZ,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,SCFjBC,G,MAA6B,CACxC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WA8BWC,EAAgB,WAC3B,MAAgCC,mBAAiBxB,EAAOyB,SAAxD,mBAAOhB,EAAP,KAAiBiB,EAAjB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EA9Be,SAACC,EAAD,GAIM,IAFzBC,EAEwB,EAFxBA,KACAJ,EACwB,EADxBA,WAiBF,OAfII,GACFD,EAAMC,MAAK,SAACC,EAAWC,GACrB,OAAQF,GACN,KAAK/B,EAAOgB,SACV,OAAOgB,EAAEE,cAAcD,GAEzB,KAAKjC,EAAOiB,OACV,OAAOe,EAAEG,OAASF,EAAEE,OAEtB,QACE,OAAO,MAKXR,EACKG,EAAMpB,UAGRoB,EAMcM,CAAe,GAAD,OAC7Bd,GAAkB,CAAES,KAAMtB,EAAUkB,eAQ1C,OACE,sBAAKrB,UAAU,kBAAf,UACE,cAAC,EAAD,CACEG,SAAU,SAAC4B,GAAD,OAAmBX,EAAYW,IACzC3B,QAAS,kBAAMkB,GAAeD,IAC9BhB,MAVe,WACnBe,EAAY1B,EAAOyB,SACnBG,GAAc,IASVhB,UAAYH,EAAS0B,OAAS,GAAKR,EACnCd,cAAeJ,EACfK,SAAUa,IAGZ,cAAC,EAAD,CAAUR,KAAMU,QCnEtBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.62fd19b2.chunk.js","sourcesContent":["export enum SortBy {\n  Default = '',\n  Alphabet = 'alphabet',\n  Length = 'length',\n}\n\nexport type Options = {\n  sort: string,\n  isReversed: boolean,\n};\n\nexport type GoodsType = string[];\n","import React from 'react';\n\ntype Props = {\n  classStr?: string,\n  click: React.MouseEventHandler<HTMLButtonElement>,\n  text: string\n};\n\nexport const Button: React.FC<Props> = ({ classStr, click, text }) => (\n  <button\n    type=\"button\"\n    className={`button ${classStr}`}\n    onClick={click}\n  >\n    {text}\n  </button>\n);\n","import React from 'react';\nimport cn from 'classnames';\nimport { SortBy } from '../../types/Types';\nimport { Button } from '../Button/Button';\n\ntype Props = {\n  sortedBy: (arg: SortBy) => void,\n  reverse: () => void,\n  reset: () => void,\n  showReset: boolean,\n  currentSorted: string,\n  isRevers: boolean,\n};\n\nexport const SortButtons: React.FC<Props> = ({\n  sortedBy,\n  reverse,\n  reset,\n  showReset,\n  currentSorted,\n  isRevers,\n}) => {\n  return (\n    <div className=\"buttons\">\n      <Button\n        classStr={cn('is-info',\n          { 'is-light': currentSorted !== SortBy.Alphabet })}\n        click={() => sortedBy(SortBy.Alphabet)}\n        text=\"Sort alphabetically\"\n      />\n\n      <Button\n        classStr={cn('is-success',\n          { 'is-light': currentSorted !== SortBy.Length })}\n        click={() => sortedBy(SortBy.Length)}\n        text=\"Sort by length\"\n      />\n\n      <Button\n        classStr={cn('is-warning', { 'is-light': !isRevers })}\n        click={reverse}\n        text=\"Reverse\"\n      />\n\n      {showReset && (\n        <Button\n          classStr=\"is-danger is-light\"\n          click={reset}\n          text=\"Reset\"\n        />\n      )}\n    </div>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  data: string[]\n};\n\nexport const DataList: React.FC<Props> = ({ data }) => (\n  <ul>\n    {data.map(item => (\n      <li data-cy=\"Good\" key={item}>{item}</li>\n    ))}\n  </ul>\n);\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport { SortBy, GoodsType, Options } from './types/Types';\nimport { SortButtons } from './components/SortButtons/SortButtons';\nimport { DataList } from './components/DataList/DataList';\nimport './App.scss';\n\nexport const goodsFromServer: GoodsType = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst getSortedGoods = (goods: GoodsType,\n  {\n    sort,\n    isReversed,\n  }: Options): GoodsType => {\n  if (sort) {\n    goods.sort((a: string, b: string) => {\n      switch (sort) {\n        case SortBy.Alphabet:\n          return a.localeCompare(b);\n\n        case SortBy.Length:\n          return a.length - b.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    return goods.reverse();\n  }\n\n  return goods;\n};\n\nexport const App: React.FC = () => {\n  const [sortedBy, setSortedBy] = useState<SortBy>(SortBy.Default);\n  const [isReversed, setIsReversed] = useState(false);\n  const visibleGoods = getSortedGoods(\n    [...goodsFromServer], { sort: sortedBy, isReversed },\n  );\n\n  const handlerReset = () => {\n    setSortedBy(SortBy.Default);\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <SortButtons\n        sortedBy={(value: SortBy) => setSortedBy(value)}\n        reverse={() => setIsReversed(!isReversed)}\n        reset={handlerReset}\n        showReset={(sortedBy.length > 0 || isReversed)}\n        currentSorted={sortedBy}\n        isRevers={isReversed}\n      />\n\n      <DataList data={visibleGoods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}